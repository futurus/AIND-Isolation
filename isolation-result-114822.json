{
    "critiques": {
        "680": {
            "rubric_items": {
                "5510": {
                    "autograded": true,
                    "result": "failed",
                    "observation": "Not all of the tests passed.\n\n```\n************************************************************************\n                         Test Failure Feedback                          \n************************************************************************\n\nFailed Test: 1. Test output interface of MinimaxPlayer.minimax()\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/vmuser_hqnadrkm/workspace/game_agent.py\", line 245, in minimax\n    return max(game.get_legal_moves(), key=lambda m: self.min_value(game.forecast_move(m), depth))\n  File \"/home/vmuser_hqnadrkm/workspace/game_agent.py\", line 245, in <lambda>\n    return max(game.get_legal_moves(), key=lambda m: self.min_value(game.forecast_move(m), depth))\n\n                     ...lines elided for space...                     \n\n  File \"/home/vmuser_hqnadrkm/workspace/game_agent.py\", line 183, in min_value\n    v = min(v, self.max_value(gameState.forecast_move(m), depth-1))\n  File \"/home/vmuser_hqnadrkm/workspace/game_agent.py\", line 196, in max_value\n    v = max(v, self.min_value(gameState.forecast_move(m), depth-1))\n  File \"/home/vmuser_hqnadrkm/workspace/game_agent.py\", line 183, in min_value\n    v = min(v, self.max_value(gameState.forecast_move(m), depth-1))\n  File \"/home/vmuser_hqnadrkm/workspace/game_agent.py\", line 196, in max_value\n    v = max(v, self.min_value(gameState.forecast_move(m), depth-1))\n  File \"/home/vmuser_hqnadrkm/workspace/game_agent.py\", line 183, in min_value\n    v = min(v, self.max_value(gameState.forecast_move(m), depth-1))\n  File \"/home/vmuser_hqnadrkm/workspace/game_agent.py\", line 196, in max_value\n    v = max(v, self.min_value(gameState.forecast_move(m), depth-1))\n  File \"/home/vmuser_hqnadrkm/workspace/game_agent.py\", line 183, in min_value\n    v = min(v, self.max_value(gameState.forecast_move(m), depth-1))\n  File \"/home/vmuser_hqnadrkm/workspace/game_agent.py\", line 196, in max_value\n    v = max(v, self.min_value(gameState.forecast_move(m), depth-1))\n  File \"/home/vmuser_hqnadrkm/workspace/game_agent.py\", line 183, in min_value\n    v = min(v, self.max_value(gameState.forecast_move(m), depth-1))\n  File \"/home/vmuser_hqnadrkm/workspace/game_agent.py\", line 196, in max_value\n    v = max(v, self.min_value(gameState.forecast_move(m), depth-1))\n  File \"/home/vmuser_hqnadrkm/workspace/game_agent.py\", line 183, in min_value\n    v = min(v, self.max_value(gameState.forecast_move(m), depth-1))\n  File \"/home/vmuser_hqnadrkm/workspace/game_agent.py\", line 196, in max_value\n    v = max(v, self.min_value(gameState.forecast_move(m), depth-1))\n  File \"/home/vmuser_hqnadrkm/workspace/game_agent.py\", line 180, in min_value\n    return self.score(gameState, gameState.active_player)\n  File \"/home/vmuser_hqnadrkm/testcases.py\", line 571, in score\n    \"each call to avoid timeout. {1}\").format(search_name, self.timer())\nRuntimeError: Your minimax agent called the score_fn after the timer fell below 0 milliseconds remaining.  If you call any helper functions in your minimax search, then you need to check the timer inside each call to avoid timeout. -0.017211000000315835\n\n\nFailed Test: 2. Test functionality of MinimaxPlayer.minimax()\n----------------------------------------------------------------------\nAssertionError: False is not true : Your MinimaxAgent.minimax function did not visit every node in the game tree as player 1.  First check for off-by-one errors in your handling of the depth limiting. Then, especially if the number of nodes explored by your agent is too low, check everywhere you call to game.get_legal_moves() to make sure you are getting the legal moves for the appropriate player at each level of the game tree.  Finally, you may be using non-standard search optimizations that are not supported by the test cases.  The range of expansions accepted will vary slightly within the range indicated based on your termination condition.\n\nExpected number of visited nodes -- min: 3 max: 3\nNumber of nodes your agent explored: 12\n\nTest Case Details:\n------------------\nHeuristic: open_move_score\nDepth limit: 1\nInitial Board State:\n     0   1   2   3   4   5   6   7   8\n0  |   |   |   |   |   |   |   |   |   | \n1  |   |   |   | - |   |   | - |   | - | \n2  |   | - | - | - | - | - | - |   |   | \n3  |   |   | - | - | - | - | - | - |   | \n4  |   |   | - | - | - | - | - | 1 |   | \n5  |   |   | - | - | - |   | - |   |   | \n6  |   |   | - |   | - | - | - |   |   | \n7  |   |   |   |   |   |   |   |   |   | \n8  |   |   |   |   | 2 |   |   |   |   | \n\ngame._board_state:\n[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 44, 67]\n\n\n\nFailed Test: 4. Test that MinimaxPlayer successfully plays a full game\n----------------------------------------------------------------------\nTraceback (most recent call last):\nRuntimeError: Agent get_moves() killed -- no response for 2 seconds\n\nDuring handling of the above exception, another exception occurred:\n\nAssertionError: Your agent raised an error while attempting to play a complete game against another agent.  Make sure that your agent can play an entire game -- including selecting initial moves on an empty board.\nException: Agent get_moves() killed -- no response for 2 seconds\n\n\nFailed Test: 5. Test interface of AlphaBetaPlayer.alphabeta()\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/vmuser_hqnadrkm/workspace/game_agent.py\", line 361, in alphabeta\n    raise NotImplementedError\nNotImplementedError\n\n\nFailed Test: 6. Test the interface of AlphaBetaPlayer.get_move()\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/vmuser_hqnadrkm/workspace/game_agent.py\", line 310, in get_move\n    raise NotImplementedError\nNotImplementedError\n\n\nFailed Test: 7. Test functionality of AlphaBetaPlayer.alphabeta()\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/vmuser_hqnadrkm/workspace/game_agent.py\", line 361, in alphabeta\n    raise NotImplementedError\nNotImplementedError\n\n\nFailed Test: 8. Test that alphabeta() raises SearchTimeout when the timer expires\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/vmuser_hqnadrkm/workspace/game_agent.py\", line 361, in alphabeta\n    raise NotImplementedError\nNotImplementedError\n\n\nFailed Test: 9. Test iterative deepening in AlphaBetaPlayer.get_move()\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/vmuser_hqnadrkm/workspace/game_agent.py\", line 310, in get_move\n    raise NotImplementedError\nNotImplementedError\n\n\nFailed Test: 10. Test that AlphaBetaPlayer successfully plays a full game\n----------------------------------------------------------------------\nTraceback (most recent call last):\nNotImplementedError\n\nDuring handling of the above exception, another exception occurred:\n\nAssertionError: Your agent raised an error while attempting to play a complete game against another agent.  Make sure that your agent can play an entire game -- including selecting initial moves on an empty board.\nException: \n\n\nFailed Test: 11. Test output interface of custom_score()\n----------------------------------------------------------------------\nAssertionError: -5 is not an instance of <class 'float'> : The custom_score() function should return a floating point value, but your function returned <class 'int'>\n\n\nFailed Test: 12. Test output interface of custom_score_2()\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/vmuser_hqnadrkm/workspace/game_agent.py\", line 65, in custom_score_2\n    raise NotImplementedError\nNotImplementedError\n\n\nFailed Test: 13. Test output interface of custom_score_3()\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/vmuser_hqnadrkm/workspace/game_agent.py\", line 91, in custom_score_3\n    raise NotImplementedError\nNotImplementedError\n\n\n************************************************************************\n                          Test Result Summary                           \n************************************************************************\n\n1. Test output interface of MinimaxPlayer.minimax():                   E\n2. Test functionality of MinimaxPlayer.minimax():                      F\n3. Test that minimax() raises SearchTimeout when the timer expires:    .\n4. Test that MinimaxPlayer successfully plays a full game:             F\n5. Test interface of AlphaBetaPlayer.alphabeta():                      E\n6. Test the interface of AlphaBetaPlayer.get_move():                   E\n7. Test functionality of AlphaBetaPlayer.alphabeta():                  E\n8. Test that alphabeta() raises SearchTimeout when the timer expires:  E\n9. Test iterative deepening in AlphaBetaPlayer.get_move():             E\n10. Test that AlphaBetaPlayer successfully plays a full game:          F\n11. Test output interface of custom_score():                           F\n12. Test output interface of custom_score_2():                         E\n13. Test output interface of custom_score_3():                         E\n\n------------------------------------------------------------------------\n            . - Test Passed    F - Test Failed    E - Error             \n\n```"
                },
                "7303": {
                    "autograded": true,
                    "result": "failed",
                    "observation": "Not all of the tests passed.\n\n```\n************************************************************************\n                         Test Failure Feedback                          \n************************************************************************\n\nFailed Test: 14. Submission includes heuristic_analysis.pdf\n----------------------------------------------------------------------\nAssertionError: False is not true : You must submit a report named heuristic_analysis.pdf for review.\n\n\nFailed Test: 15. Submission includes research_review.pdf\n----------------------------------------------------------------------\nAssertionError: False is not true : You must submit a report named research_review.pdf for review.\n\n\n************************************************************************\n                          Test Result Summary                           \n************************************************************************\n\n14. Submission includes heuristic_analysis.pdf:                        F\n15. Submission includes research_review.pdf:                           F\n\n------------------------------------------------------------------------\n            . - Test Passed    F - Test Failed    E - Error             \n\n```"
                }
            }
        }
    }
}